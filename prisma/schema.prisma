// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String            @id
  name          String
  cellphone     String
  genre         String
  profile       Profile?
  favorites     Favorites_Carts[]
  createAtUsers DateTime?
  updateAtUsers DateTime?
  status        Boolean
  invoices      Invoice[]
}

model Profile {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  password        String
  address         String
  image           String
  user            Users     @relation(fields: [userId], references: [id])
  userId          String    @unique
  createAtProfile DateTime?
  updateAtProfile DateTime?
}

model Category {
  id              String    @id
  name            String
  products        Product[]
  status          Boolean
  createAtProfile DateTime? @default(now())
  updateAtProfile DateTime? @updatedAt
}

model Product {
  id              String          @id
  name            String
  description     String
  material        String
  size            String
  shape           String
  category        Category        @relation(fields: [categoryId], references: [id])
  categoryId      String
  product         Inventory[]
  color           String
  createAtProduct DateTime?       @default(now())
  updateAtProduct DateTime?       @updatedAt
  InvoiceDetail   InvoiceDetail[]
}

model Inventory {
  id                       String            @id
  product                  Product           @relation(fields: [productId], references: [id])
  productId                String
  quantity                 Int
  image                    String[]
  price                    Decimal
  favorites                Favorites_Carts[]
  status                   Boolean
  typeDesc                 String
  desc                     Int
  createAtProductInventory DateTime?         @default(now())
  updateAtProductInventory DateTime?         @updatedAt
}

model Favorites_Carts {
  id          String    @id @unique
  user        Users     @relation(fields: [userId], references: [id])
  userId      String
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId String
  type        String
  quantity    Int
  status      Boolean
}

model Invoice {
  id              Int             @id @default(autoincrement())
  orderId         String          @unique
  invoiceNumber   String?
  amount          Decimal
  user            Users           @relation(fields: [userId], references: [id])
  userId          String
  name            String?
  idGues          String?
  phone           String?
  email           String?
  address         String?
  typeUser        String
  tax             Decimal
  typeShipping    String
  shipping        Decimal
  details         InvoiceDetail[]
  pdf             String?
  confirmation    String?
  status          String
  createAtInvoice DateTime?       @default(now())
  updateAtInvoice DateTime?       @updatedAt
}

model InvoiceDetail {
  id                    Int       @id @default(autoincrement())
  order                 Invoice   @relation(fields: [orderNumber], references: [orderId])
  orderNumber           String
  invoiceId             String?
  product               Product   @relation(fields: [productId], references: [id])
  productId             String
  quantity              Int
  price                 Decimal
  status                String
  createAtInvoiceDetail DateTime? @default(now())
  updateAtInvoiceDetail DateTime? @updatedAt
}
